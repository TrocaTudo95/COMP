/* Generated By:JJTree: Do not edit this line. ASTIndex.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.io.*;
import java.util.*;

public
class ASTIndex extends SimpleNode {
  private int index = -1;
  public ASTIndex(int id) {
    super(id);
  }

  public ASTIndex(yal2jvm p, int id) {
    super(p, id);
  }
  public void setIndex(String id){
    this.index=Integer.parseInt(id);
  }

  @Override
  public String toString() {
    return yal2jvmTreeConstants.jjtNodeName[id] + " " + this.name + "  value:" + this.index;
  }

  public void process(BufferedWriter s,SymbolTable st,String funcName){
    try{
      if(this.index != -1){
        if(this.index <= 5)
          s.write("iconst_" + this.index + "\n");
            else
          s.write("bipush " + this.index + "\n");
      }else{
      if(ASTModule.getStack().contains(this.name)){
        if(ASTModule.getStack().indexOf(this.name) <= 3)
          s.write("iload_");
            else
          s.write("iload ");
        s.write(ASTModule.getStack().indexOf(this.name) + "\n");
      }else{
        ASTModule.addToStack(this.name);
        if(ASTModule.getStack().indexOf(this.name) <= 3)
          s.write("iload_");
            else
          s.write("iload ");
        s.write(ASTModule.getStack().indexOf(this.name) + "\n");
      }
    }
    }catch (IOException e)
      {
        System.out.println("Exception ");
      }

  }

}
/* JavaCC - OriginalChecksum=76e8fe9f0f42b1c688d912ad4dcd726a (do not edit this line) */
