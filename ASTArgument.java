/* Generated By:JJTree: Do not edit this line. ASTArgument.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.io.*;
import java.util.*;

public
class ASTArgument extends SimpleNode {
  private String str_arg;
  private int int_arg;
  private String type;
  public ASTArgument(int id) {
    super(id);
    this.int_arg=-2;
  }

  public ASTArgument(yal2jvm p, int id) {
    super(p, id);
  }
  public void set_str_arg(String arg){
    this.str_arg=arg;
  }
  public void set_int_arg(String arg){
    this.int_arg=Integer.parseInt(arg);
  }

  public void setType(String type){
    this.type = type;
  }
  public int getInt(){
    return this.int_arg;
  }

  public void process2(BufferedWriter s,SymbolTable st,String funcName){

    try{

            if(this.type == "ID"){
                if(st.getTypeVariable(funcName,this.name) == "INT"){
                  if(ASTModule.getLoadI().contains(this.name)){
                    if(ASTModule.getLoadI().indexOf(this.name) <= 3){
                      s.write("iload_");
                      s.write(ASTModule.getLoadI().indexOf(this.name)+ "\n");
                    }else{
                      s.write("iload ");
                      s.write(ASTModule.getLoadI().indexOf(this.name)+ "\n");
                    }
                  }else{
                    ASTModule.setStoreI(this.name);
                    if(ASTModule.getLoadI().indexOf(this.name) <= 3){
                      s.write("iload_");
                      s.write(ASTModule.getLoadI().indexOf(this.name)+ "\n");
                    }else{
                      s.write("iload ");
                      s.write(ASTModule.getLoadI().indexOf(this.name)+ "\n");
                    }
                  }

                }

                //if(array)
            }
            if(this.type == "I"){
              if(this.int_arg <= 5){
                s.write("iconst_" + this.int_arg + "\n");
              }else{
                s.write("bitpush " + this.int_arg + "\n");
              }
            }
            if(this.type == "S"){
              s.write("ldc " + this.str_arg+"\n");
            }
        }
        catch (IOException e)
        {
          System.out.println("Exception ");
        }

  }

  public void process(BufferedWriter s,SymbolTable st,String funcName){
    this.func_name=funcName;
    try{

      if(this.name != null){
        if(st.getTypeVariable(funcName,this.name) == "INT"){
          s.write("I");
        }else if(st.getTypeVariable(funcName,this.name) == "ARRAY"){
          s.write("[I");
        }
      }
      else if(this.type == "I"){
        s.write("I");
      }
      else if(this.type == "S"){
        s.write("Ljava/lang/String;");
      }


    }
    catch (IOException e)
    {
      System.out.println("Exception ");
    }
  }

  @Override
  public String toString() {
    String temp;
    if(this.str_arg==null)
    temp= " type:int value:"+this.int_arg;
    else
      temp= " type:String value:"+this.str_arg;

    return yal2jvmTreeConstants.jjtNodeName[id] + " " + this.name + temp;
  }
}
/* JavaCC -stion has one right answer; wrong answers are graded with minus 1/4 of  OriginalChecksum=e86f66cff9855a3eddf055967b3542f6 (do not edit this line) */
