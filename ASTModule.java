/* Generated By:JJTree: Do not edit this line. ASTModule.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.io.*;
import java.util.*;
import java.util.ArrayList;

public
class ASTModule extends SimpleNode {
  protected static ArrayList<String> stack = new ArrayList<String>();
  private static SymbolTable main_table;

  public ASTModule(int id) {
    super(id);
    this.main_table=new SymbolTable(this.name);

  }

  public static ArrayList<String> getStack(){
    return stack;
  }
  public static void addToStack(String a){
    stack.add(a);
  }
  public static void resetStack(){
    stack.clear();
  }

  public String toString() { return yal2jvmTreeConstants.jjtNodeName[id] +" "+ this.name; }

  public ASTModule(yal2jvm p, int id) {
    super(p, id);
  }

  public void process(BufferedWriter s, SymbolTable st){

    try{
    s.write(".class public " + this.name + "\n");
    s.write(".super java/lang/Object\n");

    if (children != null) {
      for (int i = 0; i < children.length; ++i) {
        SimpleNode n = (SimpleNode)children[i];
        if (n != null) {
          if(n.getClass().getName() == "ASTDeclaration"){
            ((ASTDeclaration)n).process(s,st);
          }else if(n.getClass().getName() == "ASTFunction"){
            ((ASTFunction)n).process(s,st);
          }
        }
      }
      for (int j = 0; j < children.length; ++j) {
        SimpleNode sn = (SimpleNode)children[j];
        if(sn.getClass().getName() == "ASTDeclaration"){
        for(int f=0 ;f < sn.jjtGetNumChildren(); f++){
            if(sn.jjtGetChild(f).getClass().getName() == "ASTArraySize"){
                ((ASTDeclaration)sn).process2(s,st);
              }
            }
          }
        }
  }
}
    catch (IOException e)
    {
      System.out.println("Exception ");

    }
  }

  public void preprareSemantic(){
    if (children != null) {
      for (int i = 0; i < children.length; ++i) {
        SimpleNode n = (SimpleNode)children[i];
        if (n != null) {
          if(n.getClass().getName() == "ASTFunction"){
            ((ASTFunction)n).preprareSemantic();
          }
        }
      }
    }
  }

}
/* JavaCC - OriginalChecksum=9b9343e04f61c32fe112ea4c8db513ec (do not edit this line) */
